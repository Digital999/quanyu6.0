# Generated by Django 2.2.3 on 2019-07-31 08:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='admin_role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('name', models.CharField(max_length=20, verbose_name='用户名称')),
                ('password', models.CharField(max_length=20, verbose_name='用户密码')),
                ('role', models.IntegerField(verbose_name='角色编号')),
                ('Role_name', models.CharField(max_length=20, verbose_name='角色名称')),
            ],
        ),
        migrations.CreateModel(
            name='device',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('deviceName', models.CharField(max_length=10, verbose_name='设备名称')),
                ('deviceType', models.CharField(max_length=10, verbose_name='设备类型')),
                ('deviceLng', models.CharField(max_length=10, verbose_name='经度')),
                ('deviceLat', models.CharField(max_length=10, verbose_name='维度')),
                ('deviceNum', models.CharField(max_length=10, verbose_name='设备编号')),
                ('deviceMac', models.CharField(max_length=10, verbose_name='Mac地址')),
                ('deviceArea', models.CharField(max_length=10, verbose_name='才几点放置区域')),
            ],
        ),
        migrations.CreateModel(
            name='sensor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('mac', models.CharField(max_length=50, verbose_name='采集点Mac地址')),
                ('sensortype', models.CharField(max_length=50, verbose_name='传感器类型')),
                ('value', models.IntegerField(verbose_name='采集值')),
                ('deviceLng', models.CharField(max_length=50, verbose_name='经度')),
                ('deviceLat', models.CharField(max_length=50, verbose_name='维度')),
                ('month', models.CharField(max_length=50, verbose_name='采集时所属月')),
                ('day', models.CharField(max_length=50, verbose_name='采集时所属日')),
                ('hour', models.CharField(max_length=50, verbose_name='采集时所属时')),
                ('fulltime', models.DateTimeField(verbose_name='完成采集时间')),
            ],
        ),
        migrations.CreateModel(
            name='sysconfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('THITIME', models.IntegerField(verbose_name='刷新时间间隔')),
                ('TALARM', models.IntegerField(verbose_name='温度预警阈值')),
                ('TAUTO', models.IntegerField(verbose_name='温度报警是否开启')),
                ('HALARM', models.IntegerField(verbose_name='湿度预警阈值')),
                ('HAUTO', models.IntegerField(verbose_name='湿度报警是否开启')),
                ('IALARM', models.IntegerField(verbose_name='光照预警阈值')),
                ('IAUTO', models.IntegerField(verbose_name='光照报警是否开启')),
                ('CO2ALARM', models.IntegerField(verbose_name='co2预警阈值')),
                ('CO2AUTO', models.IntegerField(verbose_name='co2报警是否开启')),
                ('pm25densityalarm', models.IntegerField(verbose_name='PM2.5预警阈值')),
                ('pm25densityauto', models.IntegerField(verbose_name='PM2.5是否开启')),
                ('pm25particlealarm', models.IntegerField(verbose_name='PM2.5颗粒数预警阈值')),
                ('pm25particleauto', models.IntegerField(verbose_name='PM2.5颗粒数是否开启')),
                ('pm10densityalarm', models.IntegerField(verbose_name='PM10预警阈值')),
                ('pm10particleauto', models.IntegerField(verbose_name='PM10颗粒数是否开启')),
                ('soilphalarm', models.IntegerField(verbose_name='土壤酸碱度最大值')),
                ('soilphmin', models.IntegerField(verbose_name='土壤酸碱度最小值')),
                ('soilphauto', models.IntegerField(verbose_name='土壤酸碱阀值是否开启')),
            ],
        ),
    ]
